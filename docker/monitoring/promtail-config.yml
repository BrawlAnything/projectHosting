server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - regex:
          expression: '(?P<level>DEBUG|INFO|WARN|ERROR|FATAL)'
          source: level
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
      - drop:
          expression: '.*level="DEBUG".*'
          drop_counter_reason: debug_logs_dropped
      - limit:
          rate: 1000
          burst: 2000
          drop: true

  # Nginx logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          __path__: /var/log/nginx/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - regex:
          expression: '(?P<level>DEBUG|INFO|WARN|ERROR|FATAL)'
          source: level
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
      - drop:
          expression: '.*level="DEBUG".*'
          drop_counter_reason: debug_logs_dropped
      - limit:
          rate: 1000
          burst: 2000
          drop: true

  # Application logs
  - job_name: startup-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: startup-app
          __path__: /app-logs/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - regex:
          expression: '(?P<level>DEBUG|INFO|WARN|ERROR|FATAL)'
          source: level
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
      - drop:
          expression: '.*level="DEBUG".*'
          drop_counter_reason: debug_logs_dropped
      - limit:
          rate: 1000
          burst: 2000
          drop: true

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            service: service
      - regex:
          expression: '(?P<level>DEBUG|INFO|WARN|ERROR|FATAL)'
          source: level
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          service:
      - drop:
          expression: '.*level="DEBUG".*'
          drop_counter_reason: debug_logs_dropped
      - limit:
          rate: 1000
          burst: 2000
          drop: true
